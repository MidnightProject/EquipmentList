<Window x:Class="EquipmentList.Windows.EmployeeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EquipmentList.Windows"
        xmlns:property="clr-namespace:EquipmentList.Property"
        xmlns:validations="clr-namespace:EquipmentList.Validations"
        xmlns:converters="clr-namespace:EquipmentList.Converters"
        mc:Ignorable="d"
        Title="{Binding TitleText}" SizeToContent="WidthAndHeight" ResizeMode="NoResize" MinWidth="350" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/ErrorTextBoxStyle.xaml"/>
                <ResourceDictionary Source="/Styles/MultiValueTextBoxStyle.xaml"/>
                <ResourceDictionary Source="/Styles/MultiValueComboBoxStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:ObjectToVisibilityPasteConverter x:Key="visibilityPasteConverter"/>
            <converters:ObjectToVisibilityCopyConverter x:Key="visibilityCopyConverter"/>
            <converters:ObjectToVisibilityClearConverter x:Key="visibilityClearConverter"/>
            <converters:NullToIsThreeStateConverter x:Key="isThreeStateConverter"/>

            <ControlTemplate x:Key="validationTemplate">
                <DockPanel>
                    <Image Source="/Images/warning_blue.png" Height="20" Margin="0,0,5,0"></Image>
                    <AdornedElementPlaceholder/>
                </DockPanel>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Name:"/>
            <TextBox x:Name="nameTextBox" 
                     Grid.Row="0" Grid.Column="2" MinWidth="50"
                     MaxLength="50"
                     VerticalContentAlignment="Center"
                     property:SelectTextOnFocus.Active = "True"
                     Validation.ErrorTemplate="{StaticResource validationTemplate}"
                     Style="{StaticResource ErrorTextBoxStyle}">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="proxy" Data="{Binding}"/>
                </TextBox.Resources>
                <TextBox.Text>
                    <Binding Path="Employee.Person.Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validations:NameValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Label Grid.Row="1" Grid.Column="0" Margin="0,5,0,0" Content="Status:"/>
            <WrapPanel Grid.Row="1" Grid.Column="2" Margin="0,5,0,0" Orientation="Horizontal"
                               VerticalAlignment="Center">
                <ComboBox MinWidth="50"
                          IsEditable="False"
                          VerticalContentAlignment="Center"
                          ItemsSource="{Binding StatusList, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Employee.Status}"/>
            </WrapPanel>

            <Expander Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Header="Employee" Margin="0,10,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="9*"/>
                        <ColumnDefinition Width="71*"/>
                        <ColumnDefinition Width="81*"/>
                        <ColumnDefinition Width="80*"/>
                        <ColumnDefinition Width="81*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="Job Title:" Grid.ColumnSpan="2"/>
                    <WrapPanel Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3" Orientation="Horizontal"
                               VerticalAlignment="Center" Margin="0,2">
                        <ComboBox 
                            x:Name="jobComboBox"
                            MinWidth="50"
                                  VerticalContentAlignment="Center"
                                  ItemsSource="{Binding JobTitleList, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding Employee.Job, UpdateSourceTrigger=PropertyChanged}"/>
                        <Image Source="/Images/sub_blue_add.png" ToolTip="Add" MaxHeight="16" Margin="5,0,0,0">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="-5" Y="-2"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding JobCommand}" CommandParameter="Add"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Image Source="/Images/sub_blue_remove.png" ToolTip="Remove" MaxHeight="16" Margin="5,0,0,0">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="-5" Y="-2"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding JobCommand}" CommandParameter="Remove"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Image Source="/Images/pencil.png" ToolTip="Edit" MaxHeight="16" Margin="5,0,0,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding JobCommand}" CommandParameter="Edit"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                    </WrapPanel>

                    <Label Grid.Row="1" Grid.Column="0" Content="Building:" Grid.ColumnSpan="2"/>
                    <WrapPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal"
                               VerticalAlignment="Center" Margin="0,2">
                        <ComboBox MinWidth="50"
                                  VerticalContentAlignment="Center"
                                  ItemsSource="{Binding BuildingsList, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding Employee.Building.Name}"/>
                    </WrapPanel>

                    <Label Grid.Row="1" Grid.Column="3" Content="Room:"/>
                    <TextBox Grid.Row="1" Grid.Column="4" MinWidth="50"
                             MaxLength="10"
                             VerticalContentAlignment="Center"
                             property:SelectTextOnFocus.Active = "True"
                             Text="{Binding Employee.Room, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Grid.Row="2" Grid.Column="0" Content="Phone:" Grid.ColumnSpan="2"/>
                    <TextBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3" MinWidth="50"
                             MaxLength="20"
                             VerticalContentAlignment="Center"
                             property:SelectTextOnFocus.Active = "True"
                             Text="{Binding Employee.Person.Phone, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Grid.Row="3" Grid.Column="0" Content="Email:" Grid.ColumnSpan="2"/>
                    <TextBox x:Name="emailTextBox"
                             Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="3" MinWidth="50"
                             MaxLength="50"
                             VerticalContentAlignment="Center"
                             property:SelectTextOnFocus.Active = "True"
                             Validation.ErrorTemplate="{StaticResource validationTemplate}"
                             Style="{StaticResource ErrorTextBoxStyle}">
                        <TextBox.Resources>
                            <local:BindingProxy x:Key="proxy" Data="{Binding}"/>
                        </TextBox.Resources>
                        <TextBox.Text>
                            <Binding Path="Employee.Person.Email" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validations:EmailValidationRule>
                                        <validations:EmailValidationRule.Wrapper>
                                            <validations:Wrapper EmployeeEmail="{Binding Data.Employee.Person.Email, Source={StaticResource proxy}}"/>
                                        </validations:EmailValidationRule.Wrapper>
                                    </validations:EmailValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                </Grid>
            </Expander>
            <WrapPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,0,0">
                <Image Source="/Images/block_blue.png" ToolTip="Clear" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityClearConverter}">
                            <Binding Path="Employee.Job"/>
                            <Binding Path="Employee.Building"/>
                            <Binding Path="Employee.Room"/>
                            <Binding Path="Employee.Phone"/>
                            <Binding Path="Employee.Email"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding ClearEmployeeCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Image Source="/Images/copy.png" ToolTip="Copy" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityCopyConverter}">
                            <Binding Path="Employee.Job"/>
                            <Binding Path="Employee.Building"/>
                            <Binding Path="Employee.Room"/>
                            <Binding Path="Employee.Phone"/>
                            <Binding Path="Employee.Email"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding CopyEmployeeCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Image Source="/Images/paste.png" ToolTip="Paste" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityPasteConverter}">
                            <Binding Path="Clipboard.Employee.Job"/>
                            <Binding Path="Clipboard.Employee.Building"/>
                            <Binding Path="Clipboard.Employee.Room"/>
                            <Binding Path="Clipboard.Employee.Phone"/>
                            <Binding Path="Clipboard.Employee.Email"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding PasteEmployeeCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
            </WrapPanel>

            <Expander Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Header="Permissions" Margin="0,10,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Margin" Value="10,5"/>
                        </Style>
                    </Grid.Resources>

                    <GroupBox Grid.Row="0" Grid.Column="0" Header="USER" Margin="10,5,0,0">
                        <WrapPanel>
                            <CheckBox Content="ADD" IsThreeState="{Binding Employee.AddUser, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.AddUser}"></CheckBox>
                            <CheckBox Content="REMOVE" IsThreeState="{Binding Employee.DeleteUser, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.DeleteUser}"></CheckBox>
                            <CheckBox Content="EDIT" IsThreeState="{Binding Employee.EditUser, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.EditUser}"></CheckBox>
                            <CheckBox Content="PRINT" IsThreeState="{Binding Employee.PrintUser, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.PrintUser}"></CheckBox>
                            <CheckBox Content="VIEW" IsChecked="True" IsEnabled="False"></CheckBox>
                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Grid.Column="0" Header="OWN EQUIPMENT" Margin="10,0,0,0">
                        <WrapPanel>
                            <CheckBox Content="ADD" IsThreeState="{Binding Employee.AddOwnEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.AddOwnEquipment}"></CheckBox>
                            <CheckBox Content="REMOVE" IsThreeState="{Binding Employee.DeleteOwnEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.DeleteOwnEquipment}"></CheckBox>
                            <CheckBox Content="EDIT" IsChecked="True" IsEnabled="False"></CheckBox>
                            <CheckBox Content="PRINT" IsChecked="True" IsEnabled="False"></CheckBox>
                            <CheckBox Content="VIEW" IsChecked="True" IsEnabled="False"></CheckBox>
                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="2" Grid.Column="0" Header="OTHER EQUIPMENT" Margin="10,0,0,0">
                        <WrapPanel>
                            <CheckBox Content="ADD" IsThreeState="{Binding Employee.AddOtherEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.AddOtherEquipment}"></CheckBox>
                            <CheckBox Content="REMOVE" IsThreeState="{Binding Employee.DeleteOtherEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.DeleteOtherEquipment}"></CheckBox>
                            <CheckBox Content="EDIT" IsThreeState="{Binding Employee.EditOtherEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.EditOtherEquipment}"></CheckBox>
                            <CheckBox Content="PRINT" IsThreeState="{Binding Employee.PrintOtherEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.PrintOtherEquipment}"></CheckBox>
                            <CheckBox Content="VIEW" IsThreeState="{Binding Employee.ViewOtherEquipment, Converter={StaticResource isThreeStateConverter}}" IsChecked="{Binding Employee.ViewOtherEquipment}"></CheckBox>
                        </WrapPanel>
                    </GroupBox>
                </Grid>
            </Expander>
            <WrapPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,0,0">
                <Image Source="/Images/block_blue.png" ToolTip="Clear" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityClearConverter}">
                            <Binding Path="Employee.AddUser"/>
                            <Binding Path="Employee.EditUser"/>
                            <Binding Path="Employee.DeleteUser"/>
                            <Binding Path="Employee.PrintUser"/>
                            <Binding Path="Employee.AddOwnEquipment"/>
                            <Binding Path="Employee.DeleteOwnEquipment"/>
                            <Binding Path="Employee.AddOtherEquipment"/>
                            <Binding Path="Employee.DeleteOtherEquipment"/>
                            <Binding Path="Employee.EditOtherEquipment"/>
                            <Binding Path="Employee.ViewOtherEquipment"/>
                            <Binding Path="Employee.PrintOtherEquipment"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding ClearPermissionsCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Image Source="/Images/copy.png" ToolTip="Copy" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityCopyConverter}">
                            <Binding Path="Employee.AddUser"/>
                            <Binding Path="Employee.EditUser"/>
                            <Binding Path="Employee.DeleteUser"/>
                            <Binding Path="Employee.PrintUser"/>
                            <Binding Path="Employee.AddOwnEquipment"/>
                            <Binding Path="Employee.DeleteOwnEquipment"/>
                            <Binding Path="Employee.AddOtherEquipment"/>
                            <Binding Path="Employee.DeleteOtherEquipment"/>
                            <Binding Path="Employee.EditOtherEquipment"/>
                            <Binding Path="Employee.ViewOtherEquipment"/>
                            <Binding Path="Employee.PrintOtherEquipment"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding CopyPermissionsCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Image Source="/Images/paste.png" ToolTip="Paste" MaxHeight="16" Margin="5,0,0,0">
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource visibilityPasteConverter}">
                            <Binding Path="Clipboard.Employee.AddUser"/>
                            <Binding Path="Clipboard.Employee.EditUser"/>
                            <Binding Path="Clipboard.Employee.DeleteUser"/>
                            <Binding Path="Clipboard.Employee.PrintUser"/>
                            <Binding Path="Clipboard.Employee.AddOwnEquipment"/>
                            <Binding Path="Clipboard.Employee.DeleteOwnEquipment"/>
                            <Binding Path="Clipboard.Employee.AddOtherEquipment"/>
                            <Binding Path="Clipboard.Employee.DeleteOtherEquipment"/>
                            <Binding Path="Clipboard.Employee.EditOtherEquipment"/>
                            <Binding Path="Clipboard.Employee.ViewOtherEquipment"/>
                            <Binding Path="Clipboard.Employee.PrintOtherEquipment"/>
                        </MultiBinding>
                    </Image.Visibility>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding PastePermissionsCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
            </WrapPanel>
        </Grid>

        <GroupBox
                Grid.Column="0" 
                Grid.ColumnSpan="3"
                Grid.Row="2"
                Margin="0,0,0,0"
                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">

            <WrapPanel 
                Grid.Row="1" 
                Grid.Column="0" 
                Orientation="Horizontal" 
                HorizontalAlignment="Right" 
                Margin="5">

                <Button Content="{Binding ButtonOKText}" 
                        Height="24"
                        MinWidth="80"
                        Margin="10,0,0,0"
                        Padding="10,0"
                        Command="{Binding Button_OK}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=nameTextBox}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=emailTextBox}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Cancel"
                        Height="24"
                        MinWidth="80"
                        Margin="10,0,0,0"
                        Padding="10,0"
                        Command="{Binding Button_Cancel}"/>
            </WrapPanel>
        </GroupBox>
    </Grid>
</Window>
